{"version":3,"sources":["components/navbar/default-logo.svg","components/navbar/Navbar.tsx","components/steps-template/StepsTemplate.tsx","components/controls/text-field/TextField.tsx","components/main-content/MainContent.tsx","lib/hooksLib.ts","layout/Layout.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","aria-label","href","src","defaultLogo","alt","StepsTemplate","children","TextField","React","forwardRef","ref","onChange","onFocus","textarea","rest","InputElement","value","target","MainContent","initialState","useState","fields","setValues","val","name","useFormFields","exam","clinic","technique","findings","impressions","handleFieldChange","currentField","setCurrentField","dynamicClassNames","fieldName","length","stepsCollection","id","title","map","elem","index","placeholder","txtChangeHandler","event","type","disabled","onClick","alert","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ba95420.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default-logo.103b5fa1.svg\";","import React, { FC } from \"react\";\nimport defaultLogo from \"./default-logo.svg\";\n\nimport \"./Navbar.css\";\n\nconst Navbar: FC = () => {\n    return (\n        <header>\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                <div className=\"navbar-brand\">\n                    <a className=\"navbar-item\" href=\"#\">\n                        <img className=\"logo-img\" src={defaultLogo} alt=\"logo-img\" />\n                    </a>\n                </div>\n                <div className=\"navbar-menu\">\n                    <div className=\"navbar-end\">\n                        <a className=\"navbar-item is-active\" href=\"#\">\n                            Home\n                        </a>\n                    </div>\n                </div>\n            </nav>\n        </header>\n    );\n};\n\nexport default Navbar;\n","import React, { FC, Children } from \"react\";\n\nimport \"./StepsTemplate.css\";\n\nconst StepsTemplate: FC = ({ children }) => {\n    return <div className=\"step\">{children}</div>;\n};\n\nexport default StepsTemplate;\n","import React from \"react\";\nimport \"./TextField.css\";\n\ntype InputElement = HTMLInputElement | HTMLTextAreaElement;\ntype InputChangeEvent = React.ChangeEvent<InputElement>;\ntype InputFocusEvent = React.FocusEvent<InputElement>;\n\ninterface TextFieldProps {\n    value: string;\n    onChange: (val: string) => void;\n    onFocus: (event: InputFocusEvent) => void;\n    placeholder?: string;\n    autoFocus?: boolean;\n    name?: string;\n    type?: \"email\" | \"password\" | \"text\";\n    textarea?: boolean;\n}\n\nconst TextField = React.forwardRef<InputElement, TextFieldProps>(\n    ({ onChange, onFocus, textarea = false, ...rest }, ref) => {\n        const InputElement = textarea ? \"textarea\" : \"input\";\n        return (\n            <InputElement\n                ref={ref as any}\n                className=\"input\"\n                onChange={({ target: { value } }: InputChangeEvent) => onChange(value)}\n                onFocus={onFocus}\n                {...rest}\n            />\n        );\n    }\n);\n\nexport default TextField;\n","import React, { FC, useState } from \"react\";\nimport StepsTemplate from \"../steps-template/StepsTemplate\";\nimport TextField from \"../controls/text-field/TextField\";\nimport { useFormFields } from \"../../lib/hooksLib\";\n\nimport \"./MainContent.css\";\n\nconst MainContent: FC = () => {\n    const steps = [\n        { id: \"1\", title: \"Examination\", name: \"exam\" },\n        { id: \"2\", title: \"Clinical History\", name: \"clinic\" },\n        { id: \"3\", title: \"Technique\", name: \"technique\" },\n        { id: \"4\", title: \"Findings\", name: \"findings\" },\n        { id: \"5\", title: \"Impressions\", name: \"impressions\" },\n    ];\n\n    const [fields, handleFieldChange] = useFormFields({\n        exam: \"\",\n        clinic: \"\",\n        technique: \"\",\n        findings: \"\",\n        impressions: \"\",\n    });\n\n    const [currentField, setCurrentField] = useState(\"\");\n\n    const txtChangeHandler = (val: string, name: string) => {\n        handleFieldChange(val, name);\n    };\n\n    const txtFocusHandler = (event: any, name: string) => {\n        setCurrentField(name);\n    };\n\n    const validateEntries = () =>\n        fields.exam.length > 0 &&\n        fields.clinic.length > 0 &&\n        fields.technique.length > 0 &&\n        fields.findings.length > 0 &&\n        fields.impressions.length > 0;\n\n    const handleSubmit = () => {\n        alert(\"Your report has been successfully submitted\");\n    };\n\n    const dynamicClassNames = (fieldName: string) => {\n        let className = currentField === fieldName ? \"current \" : \"\";\n        const field = fields[fieldName];\n        if (field.length > 0) {\n            className += \"is-done\";\n        }\n        return className;\n    };\n\n    const stepsCollection = steps.map((elem, index) => [\n        <div className={`step-item ${dynamicClassNames(elem.name)}`} key={`step-item-key-${index}`}>\n            <h3>{elem?.title || \"\"}</h3>\n            <TextField\n                placeholder={elem?.title}\n                value={fields[elem.name]}\n                onChange={(val) => txtChangeHandler(val, elem.name)}\n                onFocus={(event) => txtFocusHandler(event, elem.name)}\n                textarea\n            />\n        </div>,\n    ]);\n\n    return (\n        <div className=\"main-contents\">\n            <StepsTemplate>\n                {stepsCollection.length === 0 ? <p>No Steps data available</p> : stepsCollection}\n            </StepsTemplate>\n            <div className=\"btn-container\">\n                <button type=\"button\" className=\"button\" disabled={!validateEntries()} onClick={handleSubmit}>\n                    Submit\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default MainContent;\n","import { useState } from \"react\";\n\nexport function useFormFields(initialState: any) {\n    const [fields, setValues] = useState(initialState);\n\n    return [\n        fields,\n        function (val: string, name: string) {\n            setValues({\n                ...fields,\n                [name]: val,\n            });\n        },\n    ];\n}\n","import React, { FC } from \"react\";\nimport Navbar from \"../components/navbar/Navbar\";\nimport MainContent from \"../components/main-content/MainContent\";\n\nimport \"./Layout.css\";\n\nconst Layout: FC = () => {\n    return (\n        <div>\n            <Navbar />\n            <div className=\"dashboard-contents\">\n                <MainContent />\n            </div>\n        </div>\n    );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Layout from \"./layout/Layout\";\n\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <div>\n            <Layout />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}